{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FaMobileAlt } from \"react-icons/fa\";\nimport styled from \"@emotion/styled\";\nimport xml2js from \"xml2js\";\nconst DeviceListItemContainer = styled.li`\n  margin: 1rem 0;\n  padding: 1rem;\n  background-color: white;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\n  border-radius: 8px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 80%;\n`;\nconst DeviceListItemIcon = styled.div`\n  font-size: 3.5rem;\n`;\nconst DeviceListItemDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-left: 1rem;\n`;\nconst DeviceListItemTitle = styled.h2`\n  font-size: 1.5rem;\n  margin-bottom: 0.5rem;\n`;\nexport async function fetchMaaS360Data() {\n  try {\n    const response = await axios.get(\"http://localhost:5000/api/maas360\");\n    const data = response.data;\n\n    // Parse the XML response\n    const parser = new xml2js.Parser();\n    const result = await parser.parseStringPromise(data);\n\n    // Extract the actionStatusResponse object\n    const actionStatusResponse = result.actionStatusResponse;\n\n    // Transform the data into the expected format\n    const transformedData = transformData(actionStatusResponse);\n    return transformedData;\n  } catch (error) {\n    throw new Error(\"Failed to fetch data from the API\");\n  }\n}\nfunction transformData(data) {\n  // Transform the data into an array of objects, where each object represents a device\n  return [{\n    id: data.actionID[0],\n    name: data.deviceName[0],\n    os: \"\" // The API response doesn't seem to include an OS field\n    // ... any other properties you need\n  }];\n}","map":{"version":3,"names":["React","useState","useEffect","axios","FaMobileAlt","styled","xml2js","DeviceListItemContainer","li","DeviceListItemIcon","div","DeviceListItemDetails","DeviceListItemTitle","h2","fetchMaaS360Data","response","get","data","parser","Parser","result","parseStringPromise","actionStatusResponse","transformedData","transformData","error","Error","id","actionID","name","deviceName","os"],"sources":["/Users/chris.shields/code_repo/01 - Work Projects/device_tracker_frontend/src/components/Maas360Data.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FaMobileAlt } from \"react-icons/fa\";\nimport styled from \"@emotion/styled\";\nimport xml2js from \"xml2js\";\n\nconst DeviceListItemContainer = styled.li`\n  margin: 1rem 0;\n  padding: 1rem;\n  background-color: white;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\n  border-radius: 8px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 80%;\n`;\n\nconst DeviceListItemIcon = styled.div`\n  font-size: 3.5rem;\n`;\n\nconst DeviceListItemDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-left: 1rem;\n`;\n\nconst DeviceListItemTitle = styled.h2`\n  font-size: 1.5rem;\n  margin-bottom: 0.5rem;\n`;\n\nexport async function fetchMaaS360Data() {\n  try {\n    const response = await axios.get(\"http://localhost:5000/api/maas360\");\n    const data = response.data;\n\n    // Parse the XML response\n    const parser = new xml2js.Parser();\n    const result = await parser.parseStringPromise(data);\n\n    // Extract the actionStatusResponse object\n    const actionStatusResponse = result.actionStatusResponse;\n\n    // Transform the data into the expected format\n    const transformedData = transformData(actionStatusResponse);\n\n    return transformedData;\n  } catch (error) {\n    throw new Error(\"Failed to fetch data from the API\");\n  }\n}\n\nfunction transformData(data) {\n  // Transform the data into an array of objects, where each object represents a device\n  return [\n    {\n      id: data.actionID[0],\n      name: data.deviceName[0],\n      os: \"\", // The API response doesn't seem to include an OS field\n      // ... any other properties you need\n    },\n  ];\n}\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,MAAM,MAAM,QAAQ;AAE3B,MAAMC,uBAAuB,GAAGF,MAAM,CAACG,EAAG;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,kBAAkB,GAAGJ,MAAM,CAACK,GAAI;AACtC;AACA,CAAC;AAED,MAAMC,qBAAqB,GAAGN,MAAM,CAACK,GAAI;AACzC;AACA;AACA;AACA;AACA,CAAC;AAED,MAAME,mBAAmB,GAAGP,MAAM,CAACQ,EAAG;AACtC;AACA;AACA,CAAC;AAED,OAAO,eAAeC,gBAAgBA,CAAA,EAAG;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,mCAAmC,CAAC;IACrE,MAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAI;;IAE1B;IACA,MAAMC,MAAM,GAAG,IAAIZ,MAAM,CAACa,MAAM,EAAE;IAClC,MAAMC,MAAM,GAAG,MAAMF,MAAM,CAACG,kBAAkB,CAACJ,IAAI,CAAC;;IAEpD;IACA,MAAMK,oBAAoB,GAAGF,MAAM,CAACE,oBAAoB;;IAExD;IACA,MAAMC,eAAe,GAAGC,aAAa,CAACF,oBAAoB,CAAC;IAE3D,OAAOC,eAAe;EACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;EACtD;AACF;AAEA,SAASF,aAAaA,CAACP,IAAI,EAAE;EAC3B;EACA,OAAO,CACL;IACEU,EAAE,EAAEV,IAAI,CAACW,QAAQ,CAAC,CAAC,CAAC;IACpBC,IAAI,EAAEZ,IAAI,CAACa,UAAU,CAAC,CAAC,CAAC;IACxBC,EAAE,EAAE,EAAE,CAAE;IACR;EACF,CAAC,CACF;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}