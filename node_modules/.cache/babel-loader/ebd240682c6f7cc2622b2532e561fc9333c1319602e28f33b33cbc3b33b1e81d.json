{"ast":null,"code":"var _jsxFileName = \"/Users/chris.shields/code_repo/01 - Work Projects/device_tracker_frontend/src/componentDidMount.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Maas360Data extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n  componentDidMount() {\n    axios.get(\"/api/maas360\").then(response => {\n      this.setState({\n        data: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  render() {\n    const device = this.state.data[0]; // get the first device in the array\n    const name = device ? device.name : \"No Devices Found\"; // check if device exists, if not set name to empty string\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Name of the first device:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Maas360Data;","map":{"version":3,"names":["React","Component","axios","jsxDEV","_jsxDEV","Maas360Data","constructor","props","state","data","componentDidMount","get","then","response","setState","catch","error","console","log","render","device","name","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/chris.shields/code_repo/01 - Work Projects/device_tracker_frontend/src/componentDidMount.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Maas360Data extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"/api/maas360\")\n      .then((response) => {\n        this.setState({ data: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    const device = this.state.data[0]; // get the first device in the array\n    const name = device ? device.name : \"No Devices Found\"; // check if device exists, if not set name to empty string\n    return (\n      <div>\n        <h2>Name of the first device:</h2>\n        <p>{name}</p>\n      </div>\n    );\n  }\n}\n\nexport default Maas360Data;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,SAASJ,SAAS,CAAC;EAClCK,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,IAAI,EAAE;IACR,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAG;IAClBR,KAAK,CACFS,GAAG,CAAC,cAAc,CAAC,CACnBC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACC,QAAQ,CAAC;QAAEL,IAAI,EAAEI,QAAQ,CAACJ;MAAK,CAAC,CAAC;IACxC,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN;EAEAG,MAAMA,CAAA,EAAG;IACP,MAAMC,MAAM,GAAG,IAAI,CAACZ,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnC,MAAMY,IAAI,GAAGD,MAAM,GAAGA,MAAM,CAACC,IAAI,GAAG,kBAAkB,CAAC,CAAC;IACxD,oBACEjB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAI;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAClCtB,OAAA;QAAAkB,QAAA,EAAID;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACT;EAEV;AACF;AAEA,eAAerB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}